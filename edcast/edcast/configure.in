dnl Process this file with autoconf to produce a configure script.
AC_INIT(edcast-jack, 3.1.6)
AC_CONFIG_SRCDIR(src/libedcast.cpp)

AM_INIT_AUTOMAKE

AC_PROG_CC
AC_PROG_CXX
AC_CANONICAL_HOST
AM_PROG_LIBTOOL

dnl Set some options based on environment

SOCKET_LIBS=

if test -z "$GCC"; then
        case $host in 
        *-*-irix*)
                DEBUG="-g -signed -D_REENTRANT" 
                CFLAGS="-O2 -w -signed -D_REENTRANT "
                CXXFLAGS="-O2 -w -signed -D_REENTRANT "
                PROFILE="-p -g3 -O2 -signed -D_REENTRANT"
		;;
        *-*-solaris*)
                DEBUG="-v -g -D_REENTRANT"
                CFLAGS="-xO4 -fast -w -fsimple -native -xcg92 -D_REENTRANT "
                CXXFLAGS="-xO4 -fast -w -fsimple -native -xcg92 -D_REENTRANT "
                PROFILE="-v -xpg -g -xO4 -fast -native -fsimple -xcg92 -Dsuncc -D_REENTRANT"
		SOCKET_LIBS="-lnsl -lsocket -lresolv"
		;;
        *)
                DEBUG="-g -D_REENTRANT"
                CFLAGS="-O -D_REENTRANT "
                CXXFLAGS="-O -D_REENTRANT "
                PROFILE="-g -p -D_REENTRANT"
		;;
        esac
else
        case $host in 
        *-*-linux*)
                DEBUG="-g -Wall -fsigned-char -D_REENTRANT -D_GNU_SOURCE"
                CFLAGS="-O20 -ffast-math -fsigned-char -D_REENTRANT -D_GNU_SOURCE "
                CXXFLAGS="-O20 -ffast-math -fsigned-char -D_REENTRANT -D_GNU_SOURCE "
                PROFILE="-Wall -W -pg -g -O20 -ffast-math -fsigned-char -D_REENTRANT -D_GNU_SOURCE"
        		LIBS=" $LIBS -lpthread"
		;;
        sparc-sun-solaris*)
                DEBUG="-g -Wall -fsigned-char -mv8 -D_REENTRANT"
                CFLAGS="-O20 -ffast-math -fsigned-char -mv8 -D_REENTRANT "
                CXXFLAGS="-O20 -ffast-math -fsigned-char -mv8 -D_REENTRANT "
                PROFILE="-pg -g -O20 -fsigned-char -mv8 -D_REENTRANT" 
		        SOCKET_LIBS="-lnsl -lsocket -lresolv"
        		LIBS=" $LIBS -lpthread"
		;;
	*-pc-solaris*)
                DEBUG="-g -Wall -fsigned-char -D_REENTRANT"
                CFLAGS="-O20 -ffast-math -fsigned-char -D_REENTRANT "
                CXXFLAGS="-O20 -ffast-math -fsigned-char -D_REENTRANT "
                PROFILE="-pg -g -O20 -fsigned-char -D_REENTRANT" 
		        SOCKET_LIBS="-lnsl -lsocket -lresolv"
        		LIBS=" $LIBS -lpthread"
		;;
        *freebsd*)
                DEBUG="-g -Wall -fsigned-char -D_REENTRANT"
                CFLAGS="-O20 -fsigned-char -D_REENTRANT "
                CXXFLAGS="-O20 -fsigned-char -D_REENTRANT "
                PROFILE="-O20 -g -pg -fsigned-char -D_REENTRANT" 
        		LIBS=" $LIBS -pthread"
		ogg_prefix="/usr/local"
		vorbis_prefix="/usr/local"
		;;
        *)
                DEBUG="-g -Wall -fsigned-char -D_REENTRANT "
                CFLAGS="-O20 -fsigned-char -D_REENTRANT "
                CXXFLAGS="-O20 -fsigned-char -D_REENTRANT "
                PROFILE="-O20 -g -pg -fsigned-char -D_REENTRANT" 
		        LIBS=" $LIBS -lpthread"
		;;
        esac
fi

dnl Checks for programs.

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl -- configure options --

dnl -- XIPH_PATH_OGG(, AC_MSG_ERROR(must have Ogg installed!(Perhaps you need --with-ogg-prefix=/usr/local)))
dnl -- XIPH_PATH_VORBIS(, AC_MSG_ERROR(must have Vorbis installed!(Perhaps you need --with-vorbis-prefix=/usr/local)))
dnl -- AM_PATH_LAME(, AC_MSG_ERROR(must have libmp3lame installed!))

AM_PATH_LIBFLAC(HAVE_FLAC=1, AC_MSG_WARN(libflac not installed))
AC_CHECK_FUNC(pthread_create, [],
    AC_CHECK_LIB(pthread, pthread_create, [],
        AC_MSG_ERROR([*** edcast requires POSIX threads support])))

####################################################################
#  CHECKING FOR JACK                                               #
####################################################################
dnl **** Check for Jack sound server ****
JACK_LIBS=error
AC_CHECK_HEADERS(jack/jack.h)
if test "${ac_cv_header_jack_jack_h}" = "no"
then
  AC_MSG_ERROR([Could not find jack/jack.h  Install jack headers to build edcast])
fi

OLDCFLAGS="$CFLAGS"
CFLAGS="$CFLAGS -lpthread -ljack -ldl"

AC_CHECK_LIB(jack, jack_activate, JACK_LIBS="-ljack -ldl")
if test "${ac_cv_lib_jack_jack_activate}" = "no"
then
  AC_MSG_ERROR([Could not find jack_activate in libjack.  Ensure that you have libjack installed and that it a current version.])
fi 

CFLAGS="$OLDCFLAGS"
####################################################################
#  END OF JACK CHECK                                               #
####################################################################
####################################################################
#  CHECKING FOR FAAC                                               #
####################################################################
OLDCFLAGS="$CFLAGS"
CFLAGS="$CFLAGS -lfaac -lm"

AC_CHECK_LIB(faac, faacEncOpen, FAAC_LIBS="-lfaac -lm")
if test "${ac_cv_lib_faac_faacEncOpen}" = "no"
then
  AC_MSG_WARN([Unable to find libfaac, building without FAAC support])
  FAAC_CFLAGS=""
else
  FAAC_CFLAGS="-DHAVE_FAAC"
fi 

CFLAGS="$OLDCFLAGS"
####################################################################
#  END OF FAAC CHECK                                               #
####################################################################
####################################################################
#  CHECKING FOR LAME                                               #
####################################################################
dnl **** Check for Lame ****
AC_CHECK_HEADERS(lame/lame.h)
if test "${ac_cv_header_lame_lame_h}" = "no"
then
  AC_MSG_WARN([Unable to find lame headers, building without LAME support])
  LAME_CFLAGS=""
else
  OLDCFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -lmp3lame -lm"

  AC_CHECK_LIB(mp3lame, lame_init, LAME_LIBS="-lmp3lame -lm")
  if test "${ac_cv_lib_mp3lame_lame_init}" = "no"
  then
    AC_MSG_WARN([Could not find lame_init in mp3lame, building without LAME support])
    LAME_CFLAGS=""
  else
    LAME_CFLAGS="-DHAVE_LAME"
  fi 
fi

CFLAGS="$OLDCFLAGS"
####################################################################
#  END OF LAME CHECK                                               #
####################################################################
####################################################################
#  CHECKING FOR VORBIS                                             #
####################################################################
AC_CHECK_HEADERS(vorbis/vorbisenc.h)
if test "${ac_cv_header_vorbis_vorbisenc_h}" = "no"
then
  AC_MSG_WARN([Unable to find OggVorbis headers, building without OggVorbis support])
  VORBIS_CFLAGS=""
else
  OLDCFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -lvorbis -logg -lvorbisenc"

  AC_CHECK_LIB(vorbisenc, vorbis_encode_init, VORBIS_LIBS="-lvorbis -logg -lvorbisenc")
  if test "${ac_cv_lib_vorbisenc_vorbis_encode_init}" = "no"
  then
    AC_MSG_WARN([Could not find vorbis_encode_init in libvorbisenc, building without VORBIS support])
    VORBIS_CFLAGS=""
  else
    VORBIS_CFLAGS="-DHAVE_VORBIS"
  fi 
fi

CFLAGS="$OLDCFLAGS"

####################################################################
#  END OF VORBIS CHECK                                             #
####################################################################

dnl Make substitutions
AC_SUBST(JACK_LIBS)
AC_SUBST(LAME_LIBS)
AC_SUBST(LAME_CFLAGS)
AC_SUBST(FAAC_CFLAGS)
AC_SUBST(FAAC_LIBS)
AC_SUBST(VORBIS_CFLAGS)
AC_SUBST(VORBIS_LIBS)
AC_SUBST(LIBFLAC_CFLAGS)
AC_SUBST(LIBFLAC_LIBS)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(OPT)
AC_SUBST(LIBS)
AC_SUBST(DEBUG)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(PROFILE)

AC_OUTPUT(Makefile src/Makefile conf/Makefile src/libedcast/Makefile)
echo 
echo 
echo "--------------------------------------------"
if test "${ac_cv_header_vorbis_vorbisenc_h}" = "no"
then
	echo "Vorbis support:			NO"
else
	echo "Vorbis support:			YES"
fi

if test "${ac_cv_lib_mp3lame_lame_init}" = "no"
then
	echo "LAME support:			NO"
else
    if test "${ac_cv_header_lame_lame_h}" = "no"
    then
	echo "LAME support:			NO"
    else
	echo "LAME support:			YES"
    fi
fi

if test "${ac_cv_lib_faac_faacEncOpen}" = "no"
then
	echo "AAC support:			NO"
else
	echo "AAC support:			YES"
fi

if test "$HAVE_FLAC" = "1"
then
	echo "FLAC support:			YES"
else
	echo "FLAC support:			NO"
fi
echo "--------------------------------------------"
echo 
echo 
